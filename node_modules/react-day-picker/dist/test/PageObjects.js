"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PageObjects = void 0;
var react_1 = require("@testing-library/react");
var formatters_1 = require("../contexts/DayPickerContext/formatters");
var PageObjects = /** @class */ (function () {
    /**
     * Initialize the page objects for the DayPicker elements. Use the objects in
     * this class to access to the elements to test.
     *
     * @param today The date to use as today. Usually the one froze with
     * timekeeper.
     */
    function PageObjects(today) {
        this.today = today;
    }
    Object.defineProperty(PageObjects.prototype, "iconPrevious", {
        /** The icon for the previous button. */
        get: function () {
            return react_1.screen.getByTestId('iconPrevious');
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PageObjects.prototype, "iconDropdown", {
        /** The icon for the dropdown. */
        get: function () {
            return react_1.screen.getByTestId('iconDropdown');
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PageObjects.prototype, "iconNext", {
        /** The icon for the next button. */
        get: function () {
            return react_1.screen.getByTestId('iconNext');
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PageObjects.prototype, "table", {
        /** Get the table element. */
        get: function () {
            return react_1.screen.getByRole('table');
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PageObjects.prototype, "footer", {
        /** Get the content of the footer. */
        get: function () {
            var _a, _b;
            return (_b = (_a = this.table.querySelector('tfoot')) === null || _a === void 0 ? void 0 : _a.children[0].firstChild) !== null && _b !== void 0 ? _b : null;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PageObjects.prototype, "button", {
        get: function () {
            return react_1.screen.getByRole('button');
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PageObjects.prototype, "monthDropdown", {
        /** The drop-down to choose the month from. */
        get: function () {
            return react_1.screen.queryByRole('combobox', {
                name: /month/i
            });
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PageObjects.prototype, "yearDropdown", {
        /** The drop-down to choose the year from. */
        get: function () {
            return react_1.screen.queryByRole('combobox', {
                name: /year/i
            });
        },
        enumerable: false,
        configurable: true
    });
    /** The label of the caption element. */
    PageObjects.prototype.getCaptionLabel = function (date) {
        return react_1.screen.getByText(formatters_1.formatCaption(date));
    };
    Object.defineProperty(PageObjects.prototype, "previousButton", {
        /** The previous month button in the navigation. */
        get: function () {
            return react_1.screen.queryByRole('button', {
                name: /previous/i
            });
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PageObjects.prototype, "nextButton", {
        /** The next month button in the navigation. */
        get: function () {
            return react_1.screen.queryByRole('button', {
                name: /next/i
            });
        },
        enumerable: false,
        configurable: true
    });
    /** Select the month from the drop-down. */
    PageObjects.prototype.runSelectMonth = function (month) {
        react_1.fireEvent.change(this.monthDropdown, {
            target: { value: month.getMonth() }
        });
    };
    /** Click the previous month button. */
    PageObjects.prototype.runPreviousClick = function () {
        return react_1.fireEvent.click(this.previousButton);
    };
    /** Click the next month button. */
    PageObjects.prototype.runNextClick = function () {
        return react_1.fireEvent.click(this.nextButton);
    };
    /** Select the year from the drop-down. */
    PageObjects.prototype.runSelectYear = function (year) {
        react_1.fireEvent.change(this.yearDropdown, {
            target: { value: year.getFullYear() }
        });
    };
    return PageObjects;
}());
exports.PageObjects = PageObjects;
//# sourceMappingURL=PageObjects.js.map