"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getWeeks = void 0;
var date_fns_1 = require("date-fns");
var getOutsideEndDays_1 = require("./getOutsideEndDays");
var getOutsideStartDays_1 = require("./getOutsideStartDays");
/**
 * Return the weeks belonging to the given month.
 */
function getWeeks(month, _a) {
    var locale = _a.locale, fixedWeeks = _a.fixedWeeks;
    var monthStart = date_fns_1.startOfMonth(month);
    var monthEnd = date_fns_1.endOfMonth(month);
    var diff = date_fns_1.differenceInCalendarDays(monthEnd, monthStart);
    var weeks = {};
    var lastWeekStr = '';
    for (var i = 0; i <= diff; i++) {
        var date = date_fns_1.addDays(monthStart, i);
        var week = date_fns_1.getWeek(date, { locale: locale });
        if (week === 1 && date_fns_1.getMonth(date) === 11) {
            week = 53;
        }
        var weekStr = week.toString();
        if (!weeks[weekStr]) {
            var startDays = getOutsideStartDays_1.getOutsideStartDays(date, { locale: locale });
            // Create a new week by adding outside start days
            weeks[weekStr] = startDays;
        }
        weeks[weekStr].push(date);
        lastWeekStr = weekStr;
    }
    var lastWeek = weeks[lastWeekStr];
    var lastDay = lastWeek[lastWeek.length - 1];
    var endDays = getOutsideEndDays_1.getOutsideEndDays(lastDay, { locale: locale });
    weeks[lastWeekStr] = lastWeek.concat(endDays);
    // Add extra weeks to the month, up to 6 weeks
    if (fixedWeeks) {
        lastWeek = weeks[lastWeekStr];
        var lastWeekDate = lastWeek[lastWeek.length - 1];
        var weeksInMonth = date_fns_1.getWeeksInMonth(month, { locale: locale });
        if (weeksInMonth < 6) {
            var diffDays = date_fns_1.differenceInCalendarDays(date_fns_1.addWeeks(lastWeekDate, 6 - weeksInMonth), lastWeekDate);
            for (var i = 0; i < diffDays; i++) {
                var date = date_fns_1.addDays(lastWeekDate, i + 1);
                var week = date_fns_1.getWeek(date, { locale: locale });
                if (week === 1 && date_fns_1.getMonth(month) === 11) {
                    week = 53;
                }
                if (!weeks[week]) {
                    weeks[week] = [];
                }
                weeks[week.toString()].push(date);
            }
        }
    }
    return weeks;
}
exports.getWeeks = getWeeks;
//# sourceMappingURL=getWeeks.js.map