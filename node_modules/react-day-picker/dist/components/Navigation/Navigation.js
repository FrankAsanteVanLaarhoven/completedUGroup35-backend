"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Navigation = void 0;
var React = __importStar(require("react"));
var components_1 = require("..");
var contexts_1 = require("../../contexts");
/** A component rendering the navigation buttons or the drop-downs. */
function Navigation(props) {
    var _a;
    var _b = contexts_1.useDayPicker(), dir = _b.dir, locale = _b.locale, classNames = _b.classNames, styles = _b.styles, _c = _b.labels, labelPrevious = _c.labelPrevious, labelNext = _c.labelNext, _d = _b.components, IconNext = _d.IconNext, IconPrevious = _d.IconPrevious;
    var onPreviousClick = props.onPreviousClick, onNextClick = props.onNextClick;
    if (dir === 'rtl') {
        _a = [onPreviousClick, onNextClick], onNextClick = _a[0], onPreviousClick = _a[1];
    }
    var previousMonth = props.previousMonth, nextMonth = props.nextMonth;
    var previousLabel = labelPrevious(previousMonth, { locale: locale });
    var previousClassName = [
        classNames.nav_button,
        classNames.nav_button_previous
    ].join(' ');
    var nextLabel = labelNext(nextMonth, { locale: locale });
    var nextClassName = [
        classNames.nav_button,
        classNames.nav_button_previous
    ].join(' ');
    var previousButton = (React.createElement(components_1.Button, { key: "prev", "aria-label": previousLabel, className: previousClassName, style: styles.nav_button_previous, disabled: !previousMonth, onClick: onPreviousClick },
        React.createElement(IconPrevious, { className: classNames.nav_icon, style: styles.nav_icon })));
    var nextButton = (React.createElement(components_1.Button, { key: "next", "aria-label": nextLabel, className: nextClassName, disabled: !nextMonth, onClick: onNextClick, style: styles.nav_button_next },
        React.createElement(IconNext, { className: classNames.nav_icon, style: styles.nav_icon })));
    if (!nextMonth && !previousMonth) {
        return React.createElement(React.Fragment, null);
    }
    return (React.createElement("div", { className: classNames.nav, style: styles.nav },
        !props.hidePrevious && (dir === 'rtl' ? nextButton : previousButton),
        !props.hideNext && (dir === 'rtl' ? previousButton : nextButton)));
}
exports.Navigation = Navigation;
//# sourceMappingURL=Navigation.js.map