"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var timekeeper_1 = __importDefault(require("timekeeper"));
var test_1 = require("../../test");
var CaptionLabel_1 = require("./CaptionLabel");
var today = new Date(1979, 8);
var po = new test_1.PageObjects(today);
beforeEach(function () { return timekeeper_1.default.freeze(today); });
afterEach(function () { return timekeeper_1.default.reset(); });
test('should render the formatted display month', function () {
    test_1.customRender(React.createElement(CaptionLabel_1.CaptionLabel, { displayMonth: today }));
    expect(po.getCaptionLabel(today)).toBeInTheDocument();
});
test('should apply the `caption_label` class name', function () {
    test_1.customRender(React.createElement(CaptionLabel_1.CaptionLabel, { displayMonth: today }), {
        classNames: { caption_label: 'foo' }
    });
    expect(po.getCaptionLabel(today)).toHaveClass('foo');
});
test('should apply the `caption_label` style', function () {
    test_1.customRender(React.createElement(CaptionLabel_1.CaptionLabel, { displayMonth: today }), {
        styles: { caption_label: { color: 'red' } }
    });
    expect(po.getCaptionLabel(today)).toHaveStyle({ color: 'red' });
});
//# sourceMappingURL=CaptionLabel.test.js.map