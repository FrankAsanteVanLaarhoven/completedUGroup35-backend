"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Row = void 0;
var React = __importStar(require("react"));
var date_fns_1 = require("date-fns");
var contexts_1 = require("../../contexts");
/**
 * Render a row in the calendar, with the days and optionally the week number.
 */
function Row(props) {
    var _a = contexts_1.useDayPicker(), styles = _a.styles, classNames = _a.classNames, showWeekNumber = _a.showWeekNumber, _b = _a.components, Day = _b.Day, WeekNumber = _b.WeekNumber;
    var weekNumberCell;
    if (showWeekNumber) {
        weekNumberCell = (React.createElement("td", { className: classNames.cell, style: styles.cell },
            React.createElement(WeekNumber, { number: props.weekNumber, dates: props.dates })));
    }
    return (React.createElement("tr", { className: classNames.row, style: styles.row },
        weekNumberCell,
        props.dates.map(function (date) { return (React.createElement("td", { className: classNames.cell, style: styles.cell, key: date_fns_1.getUnixTime(date) },
            React.createElement(Day, { displayMonth: props.displayMonth, date: date }))); })));
}
exports.Row = Row;
//# sourceMappingURL=Row.js.map