"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isMatch = void 0;
var date_fns_1 = require("date-fns");
var types_1 = require("../../../types");
var isDateInRange_1 = require("./isDateInRange");
/**
 * Returns `true` whether the day matches against the given matchers.
 */
function isMatch(day, matchers) {
    return matchers.some(function (matcher) {
        if (typeof matcher === 'boolean') {
            return matcher;
        }
        if (types_1.isDateType(matcher)) {
            return date_fns_1.isSameDay(day, matcher);
        }
        if (types_1.isArrayOfDates(matcher)) {
            return matcher.includes(day);
        }
        if (types_1.isDateRange(matcher)) {
            return isDateInRange_1.isDateInRange(day, matcher);
        }
        if (types_1.isDayOfWeekType(matcher)) {
            return matcher.dayOfWeek.includes(day.getDay());
        }
        if (types_1.isDateInterval(matcher)) {
            var isBefore = date_fns_1.differenceInCalendarDays(matcher.before, day) > 0;
            var isAfter = date_fns_1.differenceInCalendarDays(day, matcher.after) > 0;
            return isBefore && isAfter;
        }
        if (types_1.isDateAfterType(matcher)) {
            return date_fns_1.differenceInCalendarDays(day, matcher.after) > 0;
        }
        if (types_1.isDateBeforeType(matcher)) {
            return date_fns_1.differenceInCalendarDays(matcher.before, day) > 0;
        }
        if (typeof matcher === 'function') {
            return matcher(day);
        }
        return false;
    });
}
exports.isMatch = isMatch;
//# sourceMappingURL=isMatch.js.map