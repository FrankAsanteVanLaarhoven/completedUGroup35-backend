"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SelectSingleProvider = void 0;
var React = __importStar(require("react"));
var types_1 = require("../../types");
var SelectSingleContext_1 = require("./SelectSingleContext");
/** Provides the values for the [[SelectSingleProvider]]. */
function SelectSingleProvider(_a) {
    var initialProps = _a.initialProps, children = _a.children;
    var initialSelected;
    if (types_1.isDayPickerSingle(initialProps)) {
        initialSelected = initialProps.defaultSelected;
    }
    var _b = React.useState(initialSelected), selected = _b[0], setSelected = _b[1];
    var handleDayClick = function (day, dayModifiers, e) {
        var _a, _b;
        if (!types_1.isDayPickerSingle(initialProps))
            return;
        if (dayModifiers.selected && !initialProps.required) {
            setSelected(undefined);
            (_a = initialProps.onSelect) === null || _a === void 0 ? void 0 : _a.call(initialProps, undefined, day, dayModifiers, e);
            return;
        }
        setSelected(day);
        (_b = initialProps.onSelect) === null || _b === void 0 ? void 0 : _b.call(initialProps, day, day, dayModifiers, e);
    };
    var modifiers = { selected: [] };
    if (selected)
        modifiers.selected = [selected];
    return (React.createElement(SelectSingleContext_1.SelectSingleContext.Provider, { value: { selected: selected, handleDayClick: handleDayClick, modifiers: modifiers } }, children));
}
exports.SelectSingleProvider = SelectSingleProvider;
//# sourceMappingURL=SelectSingleProvider.js.map