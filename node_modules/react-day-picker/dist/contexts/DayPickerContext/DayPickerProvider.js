"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DayPickerProvider = void 0;
var React = __importStar(require("react"));
var en_US_1 = __importDefault(require("date-fns/locale/en-US"));
var Components = __importStar(require("../../components"));
var DayPickerContext_1 = require("./DayPickerContext");
var defaultClassNames_1 = require("./defaultClassNames");
var formatters = __importStar(require("./formatters"));
var labels = __importStar(require("./labels"));
var utils_1 = require("./utils");
/**
 * The provider for the [[DayPickerContext]].
 */
function DayPickerProvider(props) {
    var _a, _b, _c, _d, _e, _f;
    var children = props.children, initialProps = props.initialProps;
    var locale = (_a = initialProps.locale) !== null && _a !== void 0 ? _a : en_US_1.default;
    var numberOfMonths = (_b = initialProps.numberOfMonths) !== null && _b !== void 0 ? _b : 1;
    var today = (_c = initialProps.today) !== null && _c !== void 0 ? _c : new Date();
    // Limit navigation
    var _g = utils_1.parseFromToProps(initialProps), fromDate = _g.fromDate, toDate = _g.toDate;
    // Default caption layout. If calendar navigation is unlimited, it must be
    // always `buttons` â€“ as we cannot display infinite options in the dropdown.
    var captionLayout = (_d = initialProps.captionLayout) !== null && _d !== void 0 ? _d : 'buttons';
    if (!fromDate && !toDate)
        captionLayout = 'buttons';
    var modifiers = utils_1.parseModifierProps(initialProps);
    // Disable days before/after from/toDate
    if (fromDate) {
        modifiers.disabled.push({ before: fromDate });
    }
    if (toDate) {
        modifiers.disabled.push({ after: toDate });
    }
    var toYear = initialProps.toYear, fromYear = initialProps.fromYear, toMonth = initialProps.toMonth, fromMonth = initialProps.fromMonth, contextProps = __rest(initialProps, ["toYear", "fromYear", "toMonth", "fromMonth"]);
    var context = __assign(__assign({}, contextProps), { captionLayout: captionLayout,
        fromDate: fromDate,
        toDate: toDate,
        today: today,
        locale: locale, modifierClassNames: (_e = initialProps.modifierClassNames) !== null && _e !== void 0 ? _e : {}, modifierPrefix: 'rdp-day_', modifiers: modifiers, numberOfMonths: numberOfMonths, styles: (_f = initialProps.styles) !== null && _f !== void 0 ? _f : {}, classNames: __assign(__assign({}, defaultClassNames_1.defaultClassNames), initialProps.classNames), formatters: __assign(__assign({}, formatters), initialProps.formatters), labels: __assign(__assign({}, labels), initialProps.labels), components: __assign({ Caption: Components.Caption, CaptionLabel: Components.CaptionLabel, Day: Components.Day, DayContent: Components.DayContent, Dropdown: Components.Dropdown, Footer: Components.Footer, Head: Components.Head, IconDropdown: Components.IconDropdown, IconNext: Components.IconNext, IconPrevious: Components.IconPrevious, Row: Components.Row, WeekNumber: Components.WeekNumber }, initialProps.components) });
    return (React.createElement(DayPickerContext_1.DayPickerContext.Provider, { value: context }, children));
}
exports.DayPickerProvider = DayPickerProvider;
//# sourceMappingURL=DayPickerProvider.js.map