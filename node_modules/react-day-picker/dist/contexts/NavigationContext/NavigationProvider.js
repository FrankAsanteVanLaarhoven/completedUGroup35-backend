"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NavigationProvider = void 0;
var React = __importStar(require("react"));
var contexts_1 = require("..");
var NavigationContext_1 = require("./NavigationContext");
var useNavigationState_1 = require("./useNavigationState");
var getDisplayMonths_1 = require("./utils/getDisplayMonths");
var getNextMonth_1 = require("./utils/getNextMonth");
var getPreviousMonth_1 = require("./utils/getPreviousMonth");
/** Provides the values for the [[NavigationContext]]. */
function NavigationProvider(props) {
    var context = contexts_1.useDayPicker();
    var _a = useNavigationState_1.useNavigationState(), month = _a[0], goToMonth = _a[1];
    var displayMonths = getDisplayMonths_1.getDisplayMonths(month, context);
    var nextMonth = getNextMonth_1.getNextMonth(month, context);
    var previousMonth = getPreviousMonth_1.getPreviousMonth(month, context);
    return (React.createElement(NavigationContext_1.NavigationContext.Provider, { value: {
            month: month,
            displayMonths: displayMonths,
            goToMonth: goToMonth,
            previousMonth: previousMonth,
            nextMonth: nextMonth
        } }, props.children));
}
exports.NavigationProvider = NavigationProvider;
//# sourceMappingURL=NavigationProvider.js.map