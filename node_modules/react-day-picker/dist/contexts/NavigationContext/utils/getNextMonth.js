"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNextMonth = void 0;
var date_fns_1 = require("date-fns");
/**
 * Returns the next month the user can navigate to according to the given
 * options.
 *
 * Please note that the next month is not always the next calendar month:
 *
 * - if after the `toDate` range, is undefined;
 * - if the navigation is paged, is the number of months displayed ahead.
 *
 */
function getNextMonth(startingMonth, options) {
    if (options.disableNavigation) {
        return undefined;
    }
    var toDate = options.toDate, pagedNavigation = options.pagedNavigation, _a = options.numberOfMonths, numberOfMonths = _a === void 0 ? 1 : _a;
    var offset = pagedNavigation ? numberOfMonths : 1;
    var month = date_fns_1.startOfMonth(startingMonth);
    if (!toDate) {
        return date_fns_1.addMonths(month, offset);
    }
    var monthsDiff = date_fns_1.differenceInCalendarMonths(toDate, startingMonth);
    if (monthsDiff < numberOfMonths) {
        return undefined;
    }
    // Jump forward as the number of months when paged navigation
    return date_fns_1.addMonths(month, offset);
}
exports.getNextMonth = getNextMonth;
//# sourceMappingURL=getNextMonth.js.map