"use strict";
describe('when matches the `hidden` modifier', function () {
    test.todo('should not render anything');
});
describe('when outside the display month', function () {
    describe('if the outside days are hidden', function () {
        test.todo('should not render anything');
    });
    describe('if the outside days are visible', function () {
        test.todo('should apply the `day_outside` class name`');
        test.todo('should apply the `day_outside` style');
        test.todo('should render the day content in a `div` element');
    });
});
describe('when the day is not selectable', function () {
    test.todo('should render the day content in a `div` element');
});
describe('when the day is disabled', function () {
    test.todo('should render a disabled button');
    test.todo('should render a not focusable button');
});
describe('when the day is focused', function () {
    test.todo('should render a not focusable button');
});
describe('when selection mode is not controlled', function () {
    test.todo('should render a `div` element');
});
describe('when the day is not selectable', function () {
    test.todo('should render a `div` element');
});
describe('when the day is selectable', function () {
    test.todo('should render a `button` element');
    test.todo('should apply the `day` class name');
    test.todo('should apply the `day` style');
    test.todo('should be focusable');
    test.todo('should attach the `onDayClick` event handler');
    test.todo('should attach the `onDayFocus` event handler');
    test.todo('should attach the `onDayBlur` event handler');
    test.todo('should attach the `onDayKeyDown` event handler');
    test.todo('should attach the `onDayKeyUp` event handler');
    test.todo('should attach the `onDayMouseEnter` event handler');
    test.todo('should attach the `onDayMouseLeave` event handler');
    test.todo('should attach the `onDayTouchCancel` event handler');
    test.todo('should attach the `onDayTouchEnd` event handler');
    test.todo('should attach the `onDayTouchMove` event handler');
    test.todo('should attach the `onDayTouchStart` event handler');
    describe('and matches a modifier', function () {
        test.todo('should apply the modifier class names');
        test.todo('should apply the modifier style');
    });
    describe('and is clicked', function () {
        test.todo('should have the `aria-pressed` attribute');
        test.todo('should have the `selected` class name');
        test.todo('should have the `selected` style');
    });
    describe('and is focused', function () {
        test.todo('should be the focused day');
        test.todo('should not be focusable again');
        describe('and then blurred', function () {
            test.todo('should not be the focused day anymore');
        });
    });
});
//# sourceMappingURL=Day.test.js.map