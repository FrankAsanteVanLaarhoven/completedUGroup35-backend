import * as React from 'react';
import { customRender, PageObjects } from '../../test';
import { Button } from './Button';
var po = new PageObjects(new Date());
describe('when rendered without props', function () {
    beforeEach(function () {
        customRender(React.createElement(Button, { className: "foo", style: { color: 'blue' } }));
    });
    test('should render a button with type "button"', function () {
        expect(po.button).toHaveAttribute('type', 'button');
    });
    test('should render a button with the button class name', function () {
        expect(po.button).toHaveClass('rdp-button');
    });
    test('should render a button with the reset class name', function () {
        expect(po.button).toHaveClass('rdp-button_reset');
    });
    test('should add the class name', function () {
        expect(po.button).toHaveClass('foo');
    });
    test('should apply the style', function () {
        expect(po.button).toHaveStyle({ color: 'blue' });
    });
});
describe('when using class names and styles from context', function () {
    beforeEach(function () {
        customRender(React.createElement(Button, null), {
            classNames: { button: 'foo' },
            styles: { button: { color: 'red' } }
        });
    });
    test('should apply the style', function () {
        expect(po.button).toHaveStyle({ color: 'red' });
    });
    test('should apply the class name', function () {
        expect(po.button).toHaveClass('foo');
    });
});
//# sourceMappingURL=Button.test.js.map