import { addDays, addWeeks, differenceInCalendarDays, endOfMonth, getMonth, getWeek, getWeeksInMonth, startOfMonth } from 'date-fns';
import { getOutsideEndDays } from './getOutsideEndDays';
import { getOutsideStartDays } from './getOutsideStartDays';
/**
 * Return the weeks belonging to the given month.
 */
export function getWeeks(month, _a) {
    var locale = _a.locale, fixedWeeks = _a.fixedWeeks;
    var monthStart = startOfMonth(month);
    var monthEnd = endOfMonth(month);
    var diff = differenceInCalendarDays(monthEnd, monthStart);
    var weeks = {};
    var lastWeekStr = '';
    for (var i = 0; i <= diff; i++) {
        var date = addDays(monthStart, i);
        var week = getWeek(date, { locale: locale });
        if (week === 1 && getMonth(date) === 11) {
            week = 53;
        }
        var weekStr = week.toString();
        if (!weeks[weekStr]) {
            var startDays = getOutsideStartDays(date, { locale: locale });
            // Create a new week by adding outside start days
            weeks[weekStr] = startDays;
        }
        weeks[weekStr].push(date);
        lastWeekStr = weekStr;
    }
    var lastWeek = weeks[lastWeekStr];
    var lastDay = lastWeek[lastWeek.length - 1];
    var endDays = getOutsideEndDays(lastDay, { locale: locale });
    weeks[lastWeekStr] = lastWeek.concat(endDays);
    // Add extra weeks to the month, up to 6 weeks
    if (fixedWeeks) {
        lastWeek = weeks[lastWeekStr];
        var lastWeekDate = lastWeek[lastWeek.length - 1];
        var weeksInMonth = getWeeksInMonth(month, { locale: locale });
        if (weeksInMonth < 6) {
            var diffDays = differenceInCalendarDays(addWeeks(lastWeekDate, 6 - weeksInMonth), lastWeekDate);
            for (var i = 0; i < diffDays; i++) {
                var date = addDays(lastWeekDate, i + 1);
                var week = getWeek(date, { locale: locale });
                if (week === 1 && getMonth(month) === 11) {
                    week = 53;
                }
                if (!weeks[week]) {
                    weeks[week] = [];
                }
                weeks[week.toString()].push(date);
            }
        }
    }
    return weeks;
}
//# sourceMappingURL=getWeeks.js.map