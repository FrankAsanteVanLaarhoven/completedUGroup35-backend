var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { render } from '@testing-library/react';
import * as React from 'react';
import { ContextProvider } from '../contexts';
/** Render an element by wrapping it with the ContextProvider. */
export var customRender = function (element, contextValue) {
    if (contextValue === void 0) { contextValue = {}; }
    return render(React.createElement(ContextProvider, __assign({}, contextValue), element));
};
//# sourceMappingURL=customRender.js.map