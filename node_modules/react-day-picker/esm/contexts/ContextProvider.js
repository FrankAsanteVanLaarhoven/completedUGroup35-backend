var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import * as React from 'react';
import { DayPickerProvider } from './DayPickerContext';
import { FocusProvider } from './FocusContext';
import { NavigationProvider } from './NavigationContext';
import { SelectMultipleProvider } from './SelectMultipleContext';
import { SelectRangeProvider } from './SelectRangeContext';
import { SelectSingleProvider } from './SelectSingleContext';
/** Provide the value for all the context providers. */
export function ContextProvider(props) {
    var children = props.children, initialProps = __rest(props, ["children"]);
    return (React.createElement(DayPickerProvider, { initialProps: initialProps },
        React.createElement(NavigationProvider, null,
            React.createElement(SelectRangeProvider, { initialProps: initialProps },
                React.createElement(SelectMultipleProvider, { initialProps: initialProps },
                    React.createElement(SelectSingleProvider, { initialProps: initialProps },
                        React.createElement(FocusProvider, null, children)))))));
}
//# sourceMappingURL=ContextProvider.js.map