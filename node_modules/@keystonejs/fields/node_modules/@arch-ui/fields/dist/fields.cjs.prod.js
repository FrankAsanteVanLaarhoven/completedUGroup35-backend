'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _objectWithoutProperties = require('@babel/runtime/helpers/objectWithoutProperties');
var _extends = require('@babel/runtime/helpers/extends');
var core = require('@emotion/core');
var theme = require('@arch-ui/theme');
var octiconsReact = require('@primer/octicons-react');
var lozenge = require('@arch-ui/lozenge');

const FieldContainer = props => core.jsx("div", _extends({
  "data-selector": "field-container",
  css: {
    marginBottom: theme.gridSize * 2
  }
}, props));
const FieldLabel = (_ref) => {
  let {
    errors = [],
    field
  } = _ref,
      props = _objectWithoutProperties(_ref, ["errors", "field"]);

  const accessError = errors.find(error => error instanceof Error && error.name === 'AccessDeniedError');
  return core.jsx("label", _extends({
    css: {
      color: theme.colors.N60,
      fontSize: '0.9rem',
      fontWeight: 500,
      paddingBottom: theme.gridSize,
      display: 'flex',
      flexDirection: 'row',
      justifyContent: 'space-between'
    }
  }, props), field.label, core.jsx("span", null, field.isRequired && core.jsx(lozenge.Lozenge, {
    appearance: "primary"
  }, "Required"), accessError && core.jsx(octiconsReact.ShieldIcon, {
    title: accessError.message,
    css: {
      color: theme.colors.N20,
      margin: '0 1em'
    }
  })));
};
const FieldDescription = (_ref2) => {
  let {
    text
  } = _ref2,
      props = _objectWithoutProperties(_ref2, ["text"]);

  return text ? core.jsx("p", _extends({
    css: {
      margin: '0 0 8px',
      color: theme.colors.N60,
      fontSize: '0.9rem'
    }
  }, props), text) : null;
};
const FieldInput = props => core.jsx("div", _extends({
  css: {
    display: 'flex'
  }
}, props));
const Currency = props => core.jsx("span", _extends({
  css: {
    alignContent: 'center',
    backgroundColor: theme.colors.N10,
    border: '1px solid transparent',
    borderBottomRightRadius: 0,
    borderColor: theme.colors.N20,
    borderRadius: 4,
    borderRight: 0,
    borderTopRightRadius: 0,
    display: 'flex',
    fontSize: '0.9rem',
    marginRight: -2,
    padding: 10
  }
}, props));

exports.Currency = Currency;
exports.FieldContainer = FieldContainer;
exports.FieldDescription = FieldDescription;
exports.FieldInput = FieldInput;
exports.FieldLabel = FieldLabel;
