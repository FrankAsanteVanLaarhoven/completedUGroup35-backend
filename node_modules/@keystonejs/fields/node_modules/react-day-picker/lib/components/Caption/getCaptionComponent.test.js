var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { defaultProps } from '../DayPicker';
import { getCaptionComponent } from './getCaptionComponent';
describe('getCaptionComponent', function () {
    it('return the container props', function () {
        var classNames = {
            Caption: 'caption-foo'
        };
        var props = __assign(__assign({}, defaultProps), { classNames: classNames });
        var expected = {
            rootProps: {
                className: 'caption-foo'
            }
        };
        var result = getCaptionComponent(props);
        expect(result).toMatchObject(expected);
    });
});
//# sourceMappingURL=getCaptionComponent.test.js.map