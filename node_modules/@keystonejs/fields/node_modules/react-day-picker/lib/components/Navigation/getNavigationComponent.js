import { defaultLabels } from '../DayPicker';
import { getPrevNextMonths } from './utils/getPrevNextMonths';
/**
 * Return the props to apply to the elements of the [[Navigation]] component.
 */
export function getNavigationComponent(props) {
    var _a, _b, _c, _d;
    var classNames = props.classNames, styles = props.styles, onMonthChange = props.onMonthChange;
    var _e = getPrevNextMonths(props), prevMonth = _e[0], nextMonth = _e[1];
    var rootProps = {
        className: classNames === null || classNames === void 0 ? void 0 : classNames.Nav,
        style: styles === null || styles === void 0 ? void 0 : styles.Nav
    };
    var onPrevClick = function (e) {
        if (!prevMonth)
            return;
        onMonthChange === null || onMonthChange === void 0 ? void 0 : onMonthChange(prevMonth, e);
    };
    var onNextClick = function (e) {
        if (!nextMonth)
            return;
        onMonthChange === null || onMonthChange === void 0 ? void 0 : onMonthChange(nextMonth, e);
    };
    var prevAriaLabel = prevMonth &&
        ((_b = (_a = props.labelsFormatters) === null || _a === void 0 ? void 0 : _a.navPrevButton(prevMonth, props)) !== null && _b !== void 0 ? _b : defaultLabels.navPrevButton(prevMonth, props));
    var nextAriaLabel = nextMonth &&
        ((_d = (_c = props.labelsFormatters) === null || _c === void 0 ? void 0 : _c.navNextButton(nextMonth, props)) !== null && _d !== void 0 ? _d : defaultLabels.navNextButton(nextMonth, props));
    var prevButtonProps = {
        className: classNames === null || classNames === void 0 ? void 0 : classNames.NavPrevButton,
        style: styles === null || styles === void 0 ? void 0 : styles.NavPrevButton,
        onClick: onPrevClick,
        disabled: !prevMonth,
        'aria-label': prevAriaLabel
    };
    var nextButtonProps = {
        className: classNames === null || classNames === void 0 ? void 0 : classNames.NavNextButton,
        style: styles === null || styles === void 0 ? void 0 : styles.NavNextButton,
        onClick: onNextClick,
        disabled: !nextMonth,
        'aria-label': nextAriaLabel
    };
    return {
        nextMonth: nextMonth,
        prevMonth: prevMonth,
        rootProps: rootProps,
        nextButtonProps: nextButtonProps,
        prevButtonProps: prevButtonProps
    };
}
//# sourceMappingURL=getNavigationComponent.js.map