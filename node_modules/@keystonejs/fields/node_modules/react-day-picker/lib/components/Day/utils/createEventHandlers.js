import { addDays, addWeeks } from 'date-fns';
export function createEventHandlers(day, modifiers, props) {
    var onClick = function (e) {
        var _a;
        (_a = props === null || props === void 0 ? void 0 : props.onDayClick) === null || _a === void 0 ? void 0 : _a.call(props, day, modifiers, e);
    };
    var onFocus = function (e) {
        var _a;
        (_a = props.onDayFocus) === null || _a === void 0 ? void 0 : _a.call(props, day, modifiers, e);
    };
    var onBlur = function (e) {
        var _a;
        (_a = props.onDayBlur) === null || _a === void 0 ? void 0 : _a.call(props, day, modifiers, e);
    };
    var onKeyDown = function (e) {
        var _a, _b, _c, _d, _e;
        switch (e.code) {
            case 'ArrowLeft': {
                e.preventDefault();
                e.stopPropagation();
                var nextDay = addDays(day, -1);
                (_a = props.onDayFocus) === null || _a === void 0 ? void 0 : _a.call(props, nextDay, modifiers, e);
                break;
            }
            case 'ArrowRight': {
                e.preventDefault();
                e.stopPropagation();
                var nextDay = addDays(day, 1);
                (_b = props.onDayFocus) === null || _b === void 0 ? void 0 : _b.call(props, nextDay, modifiers, e);
                return;
            }
            case 'ArrowUp': {
                e.preventDefault();
                e.stopPropagation();
                var nextDay = addWeeks(day, -1);
                (_c = props.onDayFocus) === null || _c === void 0 ? void 0 : _c.call(props, nextDay, modifiers, e);
                break;
            }
            case 'ArrowDown': {
                e.preventDefault();
                e.stopPropagation();
                var nextDay = addWeeks(day, 1);
                (_d = props.onDayFocus) === null || _d === void 0 ? void 0 : _d.call(props, nextDay, modifiers, e);
                break;
            }
            case 'Space':
            case 'Enter': {
                if (!props.onDayClick)
                    return;
                props.onDayClick(day, modifiers, e);
                e.preventDefault();
                e.stopPropagation();
                break;
            }
        }
        (_e = props === null || props === void 0 ? void 0 : props.onDayKeyDown) === null || _e === void 0 ? void 0 : _e.call(props, day, modifiers, e);
    };
    var onKeyUp = function (e) {
        var _a;
        (_a = props.onDayKeyUp) === null || _a === void 0 ? void 0 : _a.call(props, day, modifiers, e);
    };
    var onKeyPress = function (e) {
        var _a;
        (_a = props.onDayKeyPress) === null || _a === void 0 ? void 0 : _a.call(props, day, modifiers, e);
    };
    var onMouseEnter = function (e) {
        var _a;
        (_a = props.onDayMouseEnter) === null || _a === void 0 ? void 0 : _a.call(props, day, modifiers, e);
    };
    var onMouseLeave = function (e) {
        var _a;
        (_a = props.onDayMouseLeave) === null || _a === void 0 ? void 0 : _a.call(props, day, modifiers, e);
    };
    var onTouchCancel = function (e) {
        var _a;
        (_a = props.onDayTouchCancel) === null || _a === void 0 ? void 0 : _a.call(props, day, modifiers, e);
    };
    var onTouchEnd = function (e) {
        var _a;
        (_a = props.onDayTouchEnd) === null || _a === void 0 ? void 0 : _a.call(props, day, modifiers, e);
    };
    var onTouchMove = function (e) {
        var _a;
        (_a = props.onDayTouchMove) === null || _a === void 0 ? void 0 : _a.call(props, day, modifiers, e);
    };
    var onTouchStart = function (e) {
        var _a;
        (_a = props.onDayTouchStart) === null || _a === void 0 ? void 0 : _a.call(props, day, modifiers, e);
    };
    return {
        onClick: onClick,
        onFocus: onFocus,
        onBlur: onBlur,
        onKeyDown: onKeyDown,
        onKeyUp: onKeyUp,
        onKeyPress: onKeyPress,
        onMouseEnter: onMouseEnter,
        onMouseLeave: onMouseLeave,
        onTouchCancel: onTouchCancel,
        onTouchEnd: onTouchEnd,
        onTouchMove: onTouchMove,
        onTouchStart: onTouchStart
    };
}
//# sourceMappingURL=createEventHandlers.js.map