var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { isSameDay } from 'date-fns';
import * as React from 'react';
import { getDayComponent } from './getDayComponent';
export function Day(props) {
    var el = React.useRef(null);
    var day = props.day, dayPickerProps = props.dayPickerProps, currentMonth = props.currentMonth;
    var locale = dayPickerProps.locale, formatDay = dayPickerProps.formatDay, focusedDay = dayPickerProps.focusedDay;
    var _a = getDayComponent(day, currentMonth, dayPickerProps), rootProps = _a.rootProps, modifiers = _a.modifiers;
    if (modifiers.hidden) {
        return null;
    }
    React.useEffect(function () {
        var _a;
        if (focusedDay && isSameDay(focusedDay, day)) {
            (_a = el === null || el === void 0 ? void 0 : el.current) === null || _a === void 0 ? void 0 : _a.focus();
        }
    }, [dayPickerProps.focusedDay]);
    return (React.createElement("time", __assign({}, rootProps, { ref: el }), formatDay(day, { locale: locale })));
}
//# sourceMappingURL=Day.js.map