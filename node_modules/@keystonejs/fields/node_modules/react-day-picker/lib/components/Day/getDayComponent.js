var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { format } from 'date-fns';
import { createClassName } from './utils/createClassName';
import { createEventHandlers } from './utils/createEventHandlers';
import { createStyle } from './utils/createStyle';
import { createTabIndex } from './utils/createTabIndex';
import { getModifiers } from './utils/getModifiers';
export function getDayComponent(day, currentMonth, props) {
    var modifiers = getModifiers(day, currentMonth, props);
    var labelsFormatters = props.labelsFormatters;
    var tabIndex = createTabIndex(day, modifiers, props);
    var eventHandlers = createEventHandlers(day, modifiers, props);
    var style = createStyle(day, modifiers, props);
    var className = createClassName(day, modifiers, props);
    var rootProps = __assign({ 'aria-disabled': modifiers.interactive ? modifiers.disabled : undefined, 'aria-label': labelsFormatters.day(day, modifiers, props), 'aria-pressed': modifiers.interactive ? modifiers.selected : undefined, className: className, dateTime: format(day, 'yyyy-MM-dd'), role: modifiers.interactive ? 'button' : undefined, style: style,
        tabIndex: tabIndex }, eventHandlers);
    return { modifiers: modifiers, rootProps: rootProps };
}
//# sourceMappingURL=getDayComponent.js.map