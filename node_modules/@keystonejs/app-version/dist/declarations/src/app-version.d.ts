import { Request, Response, NextFunction } from 'express';
export declare class AppVersionProvider<SN extends string> {
    _access: Record<SN, boolean> & {
        internal: true;
    };
    _version: string;
    constructor({ version, access, schemaNames, }: {
        version: string;
        access?: boolean | Record<SN, boolean>;
        schemaNames: SN[];
    });
    getTypes({}: {
        schemaName: SN;
    }): string[];
    getQueries({ schemaName }: {
        schemaName: SN;
    }): string[];
    getMutations({}: {
        schemaName: SN;
    }): string[];
    getSubscriptions({}: {
        schemaName: SN;
    }): string[];
    getTypeResolvers({}: {
        schemaName: SN;
    }): Record<string, any>;
    getQueryResolvers({ schemaName }: {
        schemaName: SN;
    }): {
        appVersion: () => string;
    } | {
        appVersion?: undefined;
    };
    getMutationResolvers({}: {
        schemaName: SN;
    }): Record<string, any>;
    getSubscriptionResolvers({}: {
        schemaName: SN;
    }): Record<string, any>;
}
export declare function appVersionMiddleware(version: string): (req: Request, res: Response, next: NextFunction) => void;
